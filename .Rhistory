stat_binhex()
schools %>%
ggplot(., aes(Longitude, Latitude)) +
geom_dotplot()
schools %>%
ggplot(., aes(Longitude, Latitude)) +
geom_point()
sum(is.na(schools$Longitude))
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
ggplot(., aes(Longitude, Latitude)) +
geom_point()
schools %>%
select(Longitude,Latitude) %>%
na.omit()
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric))
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_point()
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_hex()
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_density2d()
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_density2d() +
geom_point(alpha = 1/3)
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_density2d()
schools %>%
select(Longitude,Latitude) %>%
na.omit() %>%
mutate_all(funs(as.numeric)) %>%
ggplot(., aes(Longitude, Latitude)) +
geom_point()
head(as.numeric(schools$Latitude))
schools %>%
mutate_at(contains("itude"), funs(as.numeric)) %>%
select(Latitude, Longitude)
schools %>%
mutate_at(contains("itude"), funs(as.numeric))
schools %>%
mutate_at(contains("Latitude"), contains("Longitude"), funs(as.numeric))
schools %>%
mutate_at(contains("Latitude"), funs(as.numeric))
schools %>%
mutate_at(contains(Latitude), funs(as.numeric))
schools %>%
mutate_at(contains("CDS"), funs(as.numeric))
schools %>%
select(contains("CDS"))
schools %>%
select(contains("tude"))
schools %>%
mutate_at(vars(contains("tude")), funs(as.numeric))
setwd("C:\Users\benja\Documents")
setwd(r"C:\Users\benja\Documents")
setwd("C:\\Users\\benja\\Documents")
library(tidyverse)
pdftools::pdf_text("ThinkPink.pdf")
text <- pdftools::pdf_text("ThinkPink.pdf")
unlist(text)
text2 <- unlist(text)
text2 <- text[1]
str_split(text2,"\n")
unlist(str_split(text2,"\n"))
library(tidyverse)
text <- pdftools::pdf_text("ThinkPink.pdf")
page1 <- text[1]
str_split(page1)
str_split(page1, "\n")
unlist(str_split(page1, "\n"))
text_lines <- unlist(str_split(page1, "\n"))
column_names <- text_lines[3]
str.split(page1,"\n")
strsplit(page1,"\n")
str_split(column_names, " ")
str_extract(column_names, "[:alnum:]+")
str_extract_all(column_names, "[:alnum:]+")
column_names <- text_lines[3] %>%
str_extract_all("[:alnum:]+")
column_names <- text_lines[3] %>%
str_extract_all("[:alnum:]+") %>%
unlist()
text_lines[3] %>%
str_extract_all("[:alnum:]+") %>%
unlist()
column_names <- text_lines[3] %>%
str_extract_all("[:alnum:]+") %>%
unlist()
tail(column_names, 2)
paste(tail(column_names, 2), " ")
paste(list(tail(column_names, 2)), " ")
paste(unlist(tail(column_names, 2)), " ")
paste(tail(column_names, 2), " ")
paste(tail(column_names, 2))
paste0(tail(column_names, 2))
paste(tail(column_names, 2), sep = " ", collapse = T)
paste(tail(column_names, 2), collapse = " ")
rev(column_names)[2]
text_lines <- unlist(str_split(page1, "\n"))
text_lines
text_lines
rev(column_names)[2] <- paste(tail(column_names, 2))
rev(column_names)[2] <- paste(tail(column_names, 2), collapse = " ")
rev(column_names)[2]
column_names[length(column_names)-1] <- paste(tail(column_names, 2), collapse = "")
column_names
column_names <- text_lines[3] %>%
str_extract_all("[:alnum:]+") %>%
unlist()
column_names[length(column_names)-1] <- paste(tail(column_names, 2), collapse = " ")
column_names
column_names[1:length(column_names)-1]
column_names <- column_names[1:length(column_names)-1]
text[2]
unlist(str_split(text[2], "\n"))
tail(unlist(str_split(text[2], "\n")))
tail(unlist(str_split(text[3], "\n")))
tail(unlist(str_split(text[4], "\n")))
head(unlist(str_split(text[4], "\n")))
text_lines[3:length[text_lines]-2]
text_lines[3:(length[text_lines]-2)]
text_lines
text_lines[3:6]
text_lines[3:(length(text_lines)-2)]
text_lines
unlist(str_split(page1, "\n")) %>%
.[3:(length(text_lines)-2)]
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
library(tidyverse)
library(readxl)
urls <- "http://www3.cde.ca.gov/researchfiles/satactap/sat17.xls"
urls <- c(urls, "https://www.cde.ca.gov/SchoolDirectory/report?rid=dl1&tp=xlsx&ict=Y")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=FEP&cPage=filesfepsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=Enrollment&cPage=filesenr.asp")
urls <- c(urls, "https://www.cde.ca.gov/ds/sd/sd/documents/frpm1617.xls")
files <- c("sat.xls", "schools.xlsx", "languages.txt", "demographics.txt", "poverty.xls")
for (i in 1:length(urls)){
if (!file.exists(files[i])){
download.file(urls[i], destfile = files[i], method = "libcurl")
}
}
sat <- read_excel("sat.xls")
schools <- read_excel("schools.xlsx", skip = 5)
languages <- read_tsv("languages.txt")
demographics <- read_tsv("demographics.txt")
poverty <- read_excel("poverty.xls",sheet = 2, skip = 1)
database <- list(sat, schools, languages, demographics, poverty)
names(database) <- map(str_split(files, "\\."),1)
str(database$sat)
schools <- schools %>%
rename(CDS = CDSCode)
sat <- sat %>%
filter(rtype == "S") %>%
rename(CDS = cds)
sat %>%
inner_join(schools, by = "CDS") %>%
select(CDS, contains("Benchmark")) %>%
head(25)
sat %>%
inner_join(schools, by = "CDS") %>%
mutate(missingValues = (NumCurrElaBenchmark  %in% c("N/A","*"))) %>%
select(missingValues,Charter) %>%
table()
sat <- sat %>%
filter(!(NumCurrElaBenchmark %in% c("N/A", "*"))) %>%
mutate_at(vars(enroll12, NumTstTakr, contains("Benchmark")),funs(as.numeric))
schools %>%
na.omit() %>%
anti_join(schools)
head(schools)
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
sum(is.na(schools$CDSCode))
schools <- mutate_at(schools, vars(contains("tude")), funs(as.numeric))
schools %>%
na.omit() %>%
anti_join(schools) %>%
ncol(.)
schools %>%
na.omit() %>%
anti_join(schools) %>%
nrow(.)
head(schools)
schools %>%
na.omit() %>%
anti_join(schools) %>%
nrow(.)
head(schools)
schools %>%
na.omit() %>%
anti_join(schools) %>%
nrow(.)
head(schools)
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
library(tidyverse)
library(readxl)
urls <- "http://www3.cde.ca.gov/researchfiles/satactap/sat17.xls"
urls <- c(urls, "https://www.cde.ca.gov/SchoolDirectory/report?rid=dl1&tp=xlsx&ict=Y")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=FEP&cPage=filesfepsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=Enrollment&cPage=filesenr.asp")
urls <- c(urls, "https://www.cde.ca.gov/ds/sd/sd/documents/frpm1617.xls")
files <- c("sat.xls", "schools.xlsx", "languages.txt", "demographics.txt", "poverty.xls")
for (i in 1:length(urls)){
if (!file.exists(files[i])){
download.file(urls[i], destfile = files[i], method = "libcurl")
}
}
sat <- read_excel("sat.xls")
schools <- read_excel("schools.xlsx", skip = 5)
languages <- read_tsv("languages.txt")
demographics <- read_tsv("demographics.txt")
poverty <- read_excel("poverty.xls",sheet = 2, skip = 1)
database <- list(sat, schools, languages, demographics, poverty)
names(database) <- map(str_split(files, "\\."),1)
str(database$sat)
schools <- schools %>%
rename(CDS = CDSCode)
sat <- sat %>%
filter(rtype == "S") %>%
rename(CDS = cds)
sat %>%
inner_join(schools, by = "CDS") %>%
select(CDS, contains("Benchmark")) %>%
head(25)
sat %>%
inner_join(schools, by = "CDS") %>%
mutate(missingValues = (NumCurrElaBenchmark  %in% c("N/A","*"))) %>%
select(missingValues,Charter) %>%
table()
sat <- sat %>%
filter(!(NumCurrElaBenchmark %in% c("N/A", "*"))) %>%
mutate_at(vars(enroll12, NumTstTakr, contains("Benchmark")),funs(as.numeric))
schools %>%
na.omit() %>%
anti_join(schools) %>%
nrow(.)
head(schools)
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
sum(is.na(schools$CDSCode))
schools <- mutate_at(schools, vars(contains("tude")), funs(as.numeric))
sat <- read_excel("sat.xls")
library(tidyverse)
library(readxl)
urls <- "http://www3.cde.ca.gov/researchfiles/satactap/sat17.xls"
urls <- c(urls, "https://www.cde.ca.gov/SchoolDirectory/report?rid=dl1&tp=xlsx&ict=Y")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=FEP&cPage=filesfepsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=Enrollment&cPage=filesenr.asp")
urls <- c(urls, "https://www.cde.ca.gov/ds/sd/sd/documents/frpm1617.xls")
files <- c("sat.xls", "schools.xlsx", "languages.txt", "demographics.txt", "poverty.xls")
for (i in 1:length(urls)){
if (!file.exists(files[i])){
download.file(urls[i], destfile = files[i], method = "libcurl")
}
}
sat <- read_excel("sat.xls")
schools <- read_excel("schools.xlsx", skip = 5)
languages <- read_tsv("languages.txt")
demographics <- read_tsv("demographics.txt")
poverty <- read_excel("poverty.xls",sheet = 2, skip = 1)
# database <- list(sat, schools, languages, demographics, poverty)
# names(database) <- map(str_split(files, "\\."),1)
str(database$sat)
# database <- list(sat, schools, languages, demographics, poverty)
# names(database) <- map(str_split(files, "\\."),1)
str(sat)
schools <- schools %>%
rename(CDS = CDSCode)
sat <- sat %>%
filter(rtype == "S") %>%
rename(CDS = cds)
sat %>%
inner_join(schools, by = "CDS") %>%
select(CDS, contains("Benchmark")) %>%
head(25)
sat %>%
inner_join(schools, by = "CDS") %>%
mutate(missingValues = (NumCurrElaBenchmark  %in% c("N/A","*"))) %>%
select(missingValues,Charter) %>%
table()
sat <- sat %>%
filter(!(NumCurrElaBenchmark %in% c("N/A", "*"))) %>%
mutate_at(vars(enroll12, NumTstTakr, contains("Benchmark")),funs(as.numeric))
schools %>%
na.omit() %>%
anti_join(schools) %>%
nrow(.)
head(schools)
schools <- read_excel("schools.xlsx", skip = 5, na = "No Data")
sum(is.na(schools$CDSCode))
schools <- mutate_at(schools, vars(contains("tude")), funs(as.numeric))
str(languges)
str(languages)
View(languages)
languages %>%
na.omit() %>%
anti_join(languages) %>%
nrow()
setwd("C:/Portfolio/LA_schools/")
tempdata <- read_tsv("EL_Reclass.txt")
View(tempdata)
languages %>%
filter(CDS == '01100170112607') %>%
summarize(total = sum(TOTAL))
languages %>%
filter(CDS =='01100170112607')
tempdata %>%
na.omit() %>%
anti_join(tempdata) %>%
nrow()
str(languages)
urls <- "http://www3.cde.ca.gov/researchfiles/satactap/sat17.xls"
urls <- c(urls, "https://www.cde.ca.gov/SchoolDirectory/report?rid=dl1&tp=xlsx&ict=Y")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=EL&cPage=fileselsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=FEP&cPage=filesfepsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=Enrollment&cPage=filesenr.asp")
urls <- c(urls, "https://www.cde.ca.gov/ds/sd/sd/documents/frpm1617.xls")
files <- c("sat.xls", "schools.xlsx","english_learners.txt", "english_proficient.txt", "demographics.txt", "poverty.xls")
for (i in 1:length(urls)){
if (!file.exists(files[i])){
download.file(urls[i], destfile = files[i], method = "libcurl")
}
}
urls <- "http://www3.cde.ca.gov/researchfiles/satactap/sat17.xls"
urls <- c(urls, "https://www.cde.ca.gov/SchoolDirectory/report?rid=dl1&tp=xlsx&ict=Y")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=EL&cPage=fileselsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=FEP&cPage=filesfepsch")
urls <- c(urls, "http://dq.cde.ca.gov/dataquest/dlfile/dlfile.aspx?cLevel=School&cYear=2016-17&cCat=Enrollment&cPage=filesenr.asp")
urls <- c(urls, "https://www.cde.ca.gov/ds/sd/sd/documents/frpm1617.xls")
files <- c("sat.xls", "schools.xlsx","english_learners.txt", "fluent_english_proficient.txt", "demographics.txt", "poverty.xls")
for (i in 1:length(urls)){
if (!file.exists(files[i])){
download.file(urls[i], destfile = files[i], method = "libcurl")
}
}
sat <- read_excel("sat.xls")
schools <- read_excel("schools.xlsx", skip = 5)
EL <- read_tsv("english_learners.txt")
FEP <- read_tsv("fluent_english_proficient.txt")
demographics <- read_tsv("demographics.txt")
poverty <- read_excel("poverty.xls",sheet = 2, skip = 1)
str(EL)
str(FEP)
EL %>%
na.omit() %>%
anti_join(EL) %>%
nrow()
FEP %>%
na.omit() %>%
anti_join(FEP) %>%
nrow()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL)) %>%
ggplot(., aes(TOTAL)) +
geom_density()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL)) %>%
ggplot(., aes(total)) +
geom_density()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL)) %>%
ggplot(., aes(total)) +
geom_density()+
summarize()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL_EL)) %>%
ggplot(., aes(total)) +
geom_density()+
summarize()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL_EL)) %>%
ggplot(., aes(total)) +
geom_density()
EL %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL_EL)) %>%
arrange(desc(total))
FEP %>%
group_by(CDS) %>%
summarize(total = sum(TOTAL)) %>%
ggplot(., aes(total)) +
geom_density()
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep), by = CDS)
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = CDS)
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = "CDS")
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = "CDS") %>%
nrow()
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = "CDS") %>%
na.omit() %>%
nrow()
?gather
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = "CDS") %>%
gather(key = language_proficiency, value = total)
EL %>%
group_by(CDS) %>%
summarize(total_el = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(total_fep = sum(TOTAL)), by = "CDS")
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count")
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count") %>%
ggplot(., aes(count)) +
geom_density(aes(color = "proficiency"))
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count") %>%
ggplot(., aes(count)) +
geom_density(aes(color = proficiency))
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count") %>%
ggplot(., aes(count)) +
geom_histogram(aes(color = proficiency))
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count") %>%
ggplot(., aes(count)) +
geom_histogram(aes(color = proficiency), position = 'dodge')
EL %>%
group_by(CDS) %>%
summarize(english_learners = sum(TOTAL_EL)) %>%
inner_join(FEP %>%
group_by(CDS) %>%
summarize(fluent_english = sum(TOTAL)), by = "CDS") %>%
gather(english_learners, fluent_english, key = "proficiency", value = "count") %>%
ggplot(., aes(count)) +
geom_density(aes(color = proficiency))
str(demographics)
install.package("tm")
install.packages("tm")
